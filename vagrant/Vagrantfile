# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
#Vagrant.configure(2) do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.
  #config.vm.box = "centos/7"
  # config.ssh.private_key_path = "c:\\Users\\Salsa\\.ssh\\id_rsa"
  #config.vm.synced_folder ".\\", "/STELLOTO", type: "virtualbox"

  #config.ssh.insert_key = false
  #config.ssh.forward_agent = true

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Define a Vagrant Push strategy for pushing to Atlas. Other push strategies
  # such as FTP and Heroku are also available. See the documentation at
  # https://docs.vagrantup.com/v2/push/atlas.html for more information.
  # config.push.define "atlas" do |push|
  #   push.app = "YOUR_ATLAS_USERNAME/YOUR_APPLICATION_NAME"
  # end

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # config.vm.provision "shell", inline: <<-SHELL
  #   sudo apt-get update
  #   sudo apt-get install -y apache2
  # SHELL

Vagrant.require_version ">= 2.1.5"

Vagrant.configure(2) do |config|
  
  config.vm.define "centos7" do |centos|
    centos.vm.box = "centos/7"
  end

  config.vm.define "centos6" do |centos|
    centos.vm.box = "centos/6"
  end

  config.vbguest.auto_update = true
  
  #config.ssh.private_key_path = "c:\\Users\\Salsa\\.ssh\\id_rsa"
  config.vm.synced_folder "../", "/STELLOTO"

  config.ssh.insert_key = false
  config.ssh.forward_agent = true
  config.ssh.port = 2222

  config.vm.provider "virtualbox"
  config.vm.provider "docker"

  #config.vm.provider "docker" do |docker|    
  #  docker.image = "centos7"
    #d.build_dir = "docker\\"
  #  docker.has_ssh = true
    #d.ports = "2222"
  #end

  config.vm.provision "shell", inline: 
    "sudo yum install -y epel-release kernel-devel kernel-devel-3.10.0-514.10.2.el7.x86_64"
     
  config.vm.provision "ansible_local" do |ansible|
    ansible.verbose = true
    ansible.compatibility_mode = "2.0"
    ansible.playbook = "playbooks/playbook.yml"
    #ansible.inventory_path = "ansible_hosts"
  end
end
